{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jrave\\\\SwordMastersOfGinaz\\\\src\\\\Game.js\";\nimport React, { Component } from \"react\";\nimport DuncanIdaho from \"./components/DuncanIdaho\";\nimport SardaukarGrunt from \"./components/SardaukarGrunt\";\nimport BattleMenu from \"./components/BattleMenu\";\nimport { Container, Row, Col } from \"./components/Grid\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./test.css\";\nimport Cancion from \"./img/IronMaiden-ToTameLand8-Bit.mp3\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this));\n\n    _this.normalAttack = function () {\n      var newEnemyShields = _this.state.enemy.shields - 100;\n      console.log(\"enemy health \".concat(newEnemyShields)); // in this set state we switch the pictures, we set the attacking frame to true\n      //and we set the resting frame to false, so for the enemies it would take place at line 65\n\n      _this.setState({\n        enemy: {\n          shields: newEnemyShields\n        },\n        archer: false,\n        isDuncanAttacking: true,\n        pulsedGrunt: true\n      });\n\n      _this.deathCheckEnemy();\n\n      setTimeout(function () {\n        _this.setState({\n          isDuncanAttacking: false\n        });\n      }, 825);\n      setTimeout(function () {\n        _this.setState({\n          pulsedGrunt: false\n        });\n      }, 550);\n      setTimeout(function () {\n        _this.enemyAttack();\n      }, 1000);\n\n      _this.deathCheckPlayer();\n    };\n\n    _this.enemyAttack = function () {\n      _this.setState({\n        player: {\n          shields: _this.state.player.shields\n        },\n        gruntResting: false,\n        isGruntAttacking: true,\n        archer: true\n      });\n\n      var newPlayerShields = _this.state.player.shields - 100;\n\n      _this.setState({\n        player: {\n          shields: newPlayerShields\n        }\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          isGruntAttacking: false\n        });\n      }, 550);\n      setTimeout(function () {\n        _this.setState({\n          gruntResting: true\n        });\n      }, 552); //setstate of resting frame\n    };\n\n    _this.pulseAttack = function () {\n      _this.setState({\n        enemy: {\n          shields: _this.state.enemy.shields\n        },\n        archer: false,\n        isDuncanAttacking: true\n      });\n\n      var roll = Math.floor(Math.random() * 6) + 1;\n\n      if (roll === 1 || roll === 4) {\n        _this.setState({\n          pierce: true\n        });\n\n        var damageDealt = Math.floor(80 / 100 * _this.state.enemy.shields);\n        console.log(\"damage dealt \".concat(damageDealt));\n        var newEnemyShields = _this.state.enemy.shields - damageDealt;\n\n        _this.setState({\n          enemy: {\n            shields: newEnemyShields\n          }\n        });\n      } else if (roll === 2 || roll === 5) {\n        _this.setState({\n          pierce: true\n        });\n\n        var _damageDealt = Math.floor(40 / 100 * _this.state.enemy.shields);\n\n        console.log(\"damage dealt \".concat(_damageDealt));\n\n        var _newEnemyShields = _this.state.enemy.shields - _damageDealt;\n\n        _this.setState({\n          enemy: {\n            shields: _newEnemyShields\n          }\n        });\n      } else if (roll === 3 || roll === 6) {\n        var _damageDealt2 = 0;\n\n        var _newEnemyShields2 = _this.state.enemy.shields - _damageDealt2;\n\n        _this.setState({\n          enemy: {\n            shields: _newEnemyShields2\n          }\n        });\n      }\n\n      setTimeout(function () {\n        _this.setState({\n          isDuncanAttacking: false\n        });\n      }, 825);\n      setTimeout(function () {\n        _this.setState({\n          pierce: false\n        });\n      }, 550);\n      setTimeout(function () {\n        _this.enemyPulseAttack();\n      }, 1000);\n\n      _this.deathCheckEnemy();\n\n      _this.deathCheckPlayer();\n    };\n\n    _this.enemyPulseAttack = function () {\n      _this.setState({\n        player: {\n          shields: _this.state.player.shields\n        },\n        gruntResting: false,\n        isGruntAttacking: true,\n        archer: true\n      });\n\n      var pulseAttackCost = Math.floor(_this.state.player.shields / 10);\n      var damageDealt = 70 + pulseAttackCost;\n      var newPlayerShields = _this.state.player.shields - damageDealt;\n\n      _this.setState({\n        player: {\n          shields: newPlayerShields\n        }\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          isGruntAttacking: false\n        });\n      }, 550);\n    };\n\n    _this.deathCheckPlayer = function () {\n      var vida = _this.state.player.shields;\n\n      if (vida === 0 || vida < 0) {\n        console.log(\"duncan is dead\");\n      }\n    };\n\n    _this.deathCheckEnemy = function () {\n      if (_this.state.enemy.shields === 0 || _this.state.enemy.shields < 0) {\n        console.log(\"enemy is dead\");\n        var newMessage = \"Enemy has been defeated, you gain experience\";\n        sessionStorage.setItem(\"playerShields\", _this.state.player.shields + 400);\n        sessionStorage.setItem(\"playerAttack\", 125);\n        sessionStorage.setItem(\"playerDefense\", 50);\n\n        _this.setState({\n          isShowing: true\n        });\n\n        _this.setState({\n          message: newMessage\n        });\n\n        _this.setState({\n          link: \"/levelonetwo\"\n        });\n      }\n    };\n\n    _this.state = {\n      player: {\n        shields: sessionStorage.getItem(\"playerShields\"),\n        attack: sessionStorage.getItem(\"playerAttack\"),\n        defense: sessionStorage.getItem(\"playerDefense\")\n      },\n      enemy: {\n        shields: sessionStorage.getItem(\"enemyShields\"),\n        attack: sessionStorage.getItem(\"enemyAttack\"),\n        defense: sessionStorage.getItem(\"enemyDefense\")\n      },\n      // as you can see we set the primal picture ie the attacking \n      // frame to be false but we set the secondary picture ie the resting frame (that we \n      // just set to hidden) as true, remember the attacking frame has the most value\n      // to us, now go to line 48\n      isDuncanAttacking: false,\n      isGruntAttacking: false,\n      archer: true,\n      gruntResting: true,\n      //calls the resting image\n      isShowing: false,\n      message: \"\",\n      link: \"\",\n      pulsedGrunt: false,\n      pierce: false,\n      cancion: Cancion\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      function initiateStats() {\n        sessionStorage.setItem(\"enemyShields\", 450);\n        sessionStorage.setItem(\"enemyAttack\", 100);\n        sessionStorage.setItem(\"enemyDefense\", 0);\n      }\n\n      ;\n      return React.createElement(\"div\", {\n        className: \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, initiateStats(), React.createElement(Modal // style={{position:\"absolute\", zIndex:500}}\n      , {\n        className: \"modal\",\n        show: this.state.isShowing,\n        close: this.closeModalHandler,\n        link: this.state.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.message), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: \"-10%\",\n          position: \"relative\",\n          zIndex: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(DuncanIdaho, {\n        archer: this.state.archer,\n        isDuncanAttacking: this.state.isDuncanAttacking,\n        pierce: this.state.pierce,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(SardaukarGrunt, {\n        style: {\n          position: \"relative\",\n          zIndex: 0\n        } // so here you just pass the prop of the resting frame and if\n        //all goes well it should work\n        ,\n        gruntResting: this.state.gruntResting,\n        isGruntAttacking: this.state.isGruntAttacking,\n        pulsedGrunt: this.state.pulsedGrunt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(BattleMenu, {\n        playerShields: this.state.player.shields,\n        playerAttack: this.state.player.attack,\n        playerDefense: this.state.player.defense,\n        normalAttack: this.normalAttack,\n        pulseAttack: this.pulseAttack,\n        enemyShields: this.state.enemy.shields,\n        enemyAttack: this.state.enemy.attack,\n        enemyDefense: this.state.enemy.defense,\n        cancion: this.state.cancion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\jrave\\SwordMastersOfGinaz\\src\\Game.js"],"names":["React","Component","DuncanIdaho","SardaukarGrunt","BattleMenu","Container","Row","Col","Modal","Cancion","Game","normalAttack","newEnemyShields","state","enemy","shields","console","log","setState","archer","isDuncanAttacking","pulsedGrunt","deathCheckEnemy","setTimeout","enemyAttack","deathCheckPlayer","player","gruntResting","isGruntAttacking","newPlayerShields","pulseAttack","roll","Math","floor","random","pierce","damageDealt","enemyPulseAttack","pulseAttackCost","vida","newMessage","sessionStorage","setItem","isShowing","message","link","getItem","attack","defense","cancion","initiateStats","closeModalHandler","marginTop","position","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DuncanIdaho from \"./components/DuncanIdaho\";\nimport SardaukarGrunt from \"./components/SardaukarGrunt\";\nimport BattleMenu from \"./components/BattleMenu\";\nimport { Container, Row, Col } from \"./components/Grid\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./test.css\";\nimport Cancion from \"./img/IronMaiden-ToTameLand8-Bit.mp3\";\n\nclass Game extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      player: {\n        shields: sessionStorage.getItem(\"playerShields\"),\n        attack: sessionStorage.getItem(\"playerAttack\"),\n        defense: sessionStorage.getItem(\"playerDefense\")\n        \n      },\n      enemy: {\n        shields: sessionStorage.getItem(\"enemyShields\"),\n        attack: sessionStorage.getItem(\"enemyAttack\"),\n        defense: sessionStorage.getItem(\"enemyDefense\")\n      },\n\n      // as you can see we set the primal picture ie the attacking \n      // frame to be false but we set the secondary picture ie the resting frame (that we \n      // just set to hidden) as true, remember the attacking frame has the most value\n      // to us, now go to line 48\n      isDuncanAttacking: false,\n      isGruntAttacking: false,\n      archer: true,\n      gruntResting: true, //calls the resting image\n      isShowing: false,\n      message: \"\",\n      link: \"\",\n      pulsedGrunt: false,\n      pierce: false,\n      cancion: Cancion\n    }\n  };\n\n\n\n  normalAttack = () => {\n    let newEnemyShields = this.state.enemy.shields - 100;\n    console.log(`enemy health ${newEnemyShields}`);\n    // in this set state we switch the pictures, we set the attacking frame to true\n    //and we set the resting frame to false, so for the enemies it would take place at line 65\n    this.setState({\n      enemy: {shields: newEnemyShields},\n      archer: false,\n      isDuncanAttacking:true,\n      pulsedGrunt: true\n    }); \n    this.deathCheckEnemy();\n    setTimeout(() =>{this.setState({isDuncanAttacking:false})}, 825);\n    setTimeout(() => {this.setState({pulsedGrunt:false})}, 550);\n    setTimeout(() => {this.enemyAttack()}, 1000);\n    this.deathCheckPlayer();\n\n  }\n \n  enemyAttack = () => {\n    this.setState({player: {shields: this.state.player.shields},\n      gruntResting: false,\n      isGruntAttacking: true,\n      archer: true\n    });\n    let newPlayerShields = this.state.player.shields - 100;\n    this.setState({player: {shields: newPlayerShields}});\n    setTimeout(() => {this.setState({isGruntAttacking:false})}, 550);\n    setTimeout(() => {this.setState({gruntResting:true})}, 552); //setstate of resting frame\n\n  };\n  \n  pulseAttack = () => {\n    this.setState({\n      enemy: {shields: this.state.enemy.shields},\n      archer: false,\n      isDuncanAttacking:true\n    });\n    let roll = Math.floor(Math.random() * 6) + 1;\n    if (roll === 1 || roll === 4) {\n      this.setState({pierce:true});\n      let damageDealt = Math.floor((80/100) * this.state.enemy.shields);\n      console.log(`damage dealt ${damageDealt}`);\n      let newEnemyShields = this.state.enemy.shields - damageDealt;\n      this.setState({enemy: {shields: newEnemyShields}});\n    }\n    else if (roll === 2 || roll === 5) {\n      this.setState({pierce:true});\n      let damageDealt = Math.floor((40/100) * this.state.enemy.shields);\n      console.log(`damage dealt ${damageDealt}`);\n      let newEnemyShields = this.state.enemy.shields - damageDealt;\n      this.setState({enemy: {shields: newEnemyShields}});\n    }\n    else if (roll === 3 || roll === 6) {\n      let damageDealt = 0;\n      let newEnemyShields = this.state.enemy.shields - damageDealt;\n      this.setState({enemy: {shields: newEnemyShields}});\n    }\n    setTimeout(() =>{this.setState({isDuncanAttacking:false})}, 825);\n    setTimeout(() =>{this.setState({pierce:false})}, 550);\n    setTimeout(() => {this.enemyPulseAttack()}, 1000);\n    this.deathCheckEnemy();\n    this.deathCheckPlayer();\n    \n\n  }\n\n  enemyPulseAttack = () => {\n    this.setState({player: {shields: this.state.player.shields},\n      gruntResting: false,\n      isGruntAttacking: true,\n      archer: true\n    });\n    let pulseAttackCost = Math.floor(this.state.player.shields/10);\n    let damageDealt = 70 + pulseAttackCost;\n    let newPlayerShields = this.state.player.shields - damageDealt;\n    this.setState({player: {shields: newPlayerShields}});\n    setTimeout(() => {this.setState({isGruntAttacking:false})}, 550);\n\n  }\n\n  deathCheckPlayer = () => {\n    let vida = this.state.player.shields; \n    if ( vida === 0 || vida < 0) {\n      console.log(\"duncan is dead\");\n    }\n  };\n  deathCheckEnemy = () => {\n    if( this.state.enemy.shields === 0 || this.state.enemy.shields < 0) {\n      console.log(`enemy is dead`);\n      let newMessage = `Enemy has been defeated, you gain experience`;\n      sessionStorage.setItem(\"playerShields\", (this.state.player.shields) + 400);\n      sessionStorage.setItem(\"playerAttack\", 125);\n      sessionStorage.setItem(\"playerDefense\", 50);\n      this.setState({isShowing: true});\n      this.setState({message: newMessage});\n      this.setState({link: \"/levelonetwo\"});\n\n    }\n  };\n\n  render() {\n    function initiateStats(){\n    \n      sessionStorage.setItem(\"enemyShields\", 450);\n      sessionStorage.setItem(\"enemyAttack\", 100);\n      sessionStorage.setItem(\"enemyDefense\", 0);\n\n  };\n    return (\n      \n      <div className=\"A\">\n        {initiateStats()}\n        <Modal  \n        // style={{position:\"absolute\", zIndex:500}}\n          className=\"modal\"\n          show={this.state.isShowing}\n          close={this.closeModalHandler}\n          link={this.state.link}\n        >\n          {this.state.message}             \n        </Modal>\n        <Container>\n          <div style={{marginTop:\"-10%\", position:\"relative\", zIndex:0}}>\n            <Row>\n              <Col size=\"md-3\" >\n                <DuncanIdaho \n                  archer={this.state.archer}\n                  isDuncanAttacking={this.state.isDuncanAttacking}\n                  pierce={this.state.pierce}        \n                />\n              </Col>\n              <Col size=\"md-6\"></Col>\n              <Col size=\"md-3\">\n                <SardaukarGrunt style={{position:\"relative\", zIndex:0}}\n                // so here you just pass the prop of the resting frame and if\n                //all goes well it should work\n                gruntResting={this.state.gruntResting}\n                isGruntAttacking={this.state.isGruntAttacking}\n                pulsedGrunt={this.state.pulsedGrunt} \n                />                \n              </Col>\n            </Row>\n            <Row>\n               <BattleMenu\n                playerShields = {this.state.player.shields}\n                playerAttack = {this.state.player.attack}\n                playerDefense = {this.state.player.defense}\n                normalAttack = {this.normalAttack}\n                pulseAttack = {this.pulseAttack}\n                enemyShields = {this.state.enemy.shields} \n                enemyAttack= {this.state.enemy.attack}\n                enemyDefense = {this.state.enemy.defense}  \n                cancion = {this.state.cancion}\n              /> \n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}